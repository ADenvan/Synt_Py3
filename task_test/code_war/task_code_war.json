[
    {
        "id": 52,
        "name": "Find the first non-consecutive number",
        "task": "Например, если у нас есть массив [1, 2, 3, 4, 6, 7, 8], то 1, 2, 3, 4 — все последовательные числа, а 6 — нет, поэтому это первое непоследовательное число. Если весь массив последовательный, вернём null2."
    },
    {
        "id": 51,
        "name": "Reversed sequence",
        "task": "Создайте функцию, которая возвращает массив целых чисел от n до 1, где n>0."
    },
    {
        "id": 50,
        "name": "Double Char",
        "task": "Учитывая строку, необходимо вернуть строку, в которой каждый символ (с учетом регистра) повторяется один раз."
    },
    {
        "id": 49,
        "name": "All Star Code Challenge #18",
        "task": "Создайте функцию, которая принимает строку и один символ и возвращает целое число, равное количеству вхождений второго аргумента в первый. Если вхождений не найдено, следует вернуть 0."
    },
    {
        "id": 48,
        "name": "Do you speak -English-?",
        "task": "Дана строка произвольной длины, содержащая любые символы ASCII. Напишите функцию, которая определяет, содержит ли строка слово -English- целиком. Важен порядок символов — строка -abcEnglishdef- верна, а -abcnEglishsef- — нет.Регистр букв не имеет значения — строка -eNglisH- также верна. Возвращает значение в виде логического значения: true, если строка содержит слово -English-, false — если нет."
    },
    {
        "id": 47,
        "name": "Grasshopper - Summation",
        "task": "Напишите программу, которая вычисляет сумму всех чисел от 1 до указанного числа (включительно). Число всегда будет положительным целым числом, большим 0. Ваша функция должна возвращать только результат. В примере ниже в скобках показано, как получить этот результат, и это не является его частью. См. примеры тестов."
    },
    {
        "id": 46,
        "name": "altERnaTIng cAsE <=> ALTerNAtiNG CaSe",
        "task": "Определите String.prototype.toAlternatingCase (или аналогичную функцию/метод, например, to_alternating_case/toAlternatingCase/ToAlternatingCase в выбранном вами языке; подробности см. в исходном решении) так, чтобы каждая строчная буква стала заглавной, а каждая заглавная — строчной. Например:"
    },
    {
        "id": 45,
        "name": "Semi-Optional",
        "task": "Мы реализовали функцию wrap(value), которая принимает значение произвольного типа и помещает его в новый объект JavaScript или словарь Python, присваивая ключу 'value' нового объекта или словаря переданное значение."
    },
    {
        "id": 44,
        "name": "Is the string uppercase?",
        "task": "Создайте метод, который будет проверять, состоит ли строка ВСЕХ ЗАГЛАВНЫХ букв."
    },
    {
        "id": 43,
        "name": "Grader",
        "task": "Создайте функцию, которая принимает число в качестве аргумента и возвращает оценку на основе этого числа."
    },
    {
        "id": 42,
        "name": "Reversed Words",
        "task": "Дополните решение так, чтобы оно перевернуло все слова в переданной строке. Слова разделяются ровно одним пробелом, начальные и конечные пробелы отсутствуют."
    },
    {
        "id": 41,
        "name": "Never visit a . . . !?",
        "task": "Завершите функцию, которая получает входное число n, такое, что n ≥ 10 и n < 10000, затем: Сложите все цифры числа n. Вычтите сумму из n, и это будет ваше новое число n. Если новое число n есть в списке ниже, верните соответствующий фрукт, в противном случае вернитесь к заданию 1."
    },
    {
        "id": 40,
        "name": "Who ate the cookie?",
        "task": "Например: Ввод = привет --> Вывод = Кто съел последнее печенье? Это был Зак! (Вы возвращаете Зака, потому что входные данные — строка).Примечание: Убедитесь, что вы возвращаете правильное сообщение с правильными пробелами и знаками препинания."
    },
    {
        "id": 39,
        "name": "Merging sorted integer arrays (without duplicates)",
        "task": "Напишите функцию, которая объединяет два отсортированных массива в один. Массивы содержат только целые числа. Кроме того, конечный результат должен быть отсортированным и не содержать дубликатов."
    },
    {
        "id": 38,
        "name": "Who is going to pay for the wall?",
        "task": "Ваш код выведет полное имя соседа и сокращённую версию имени в виде массива. Если количество символов в имени меньше или равно двум, функция вернёт массив, содержащий только имя в исходном виде."
    },
    {
        "id": 37,
        "name": "Remove First and Last Character Part Two",
        "task": "Вам дана строка, содержащая последовательность символов, разделённых запятыми. Напишите функцию, которая возвращает новую строку, содержащую те же последовательности символов, за исключением первого и последнего, но на этот раз разделённых пробелами. Если входная строка пуста или удаление первого и последнего элементов приведёт к тому, что результирующая строка станет пустой, верните пустое значение (представленное как общее значение NULL в примерах ниже)."
    },
    {
        "id": 36,
        "name": "Remove String Spaces",
        "task": "Напишите функцию, которая удаляет пробелы из строки, а затем возвращает полученную строку."
    },
    {
        "id": 35,
        "name": "Binary Addition",
        "task": "Реализуйте функцию, которая складывает два числа и возвращает их сумму в двоичном формате. Преобразование может выполняться до или после сложения. Возвращаемое двоичное число должно быть строкой."
    },
    {
        "id": 34,
        "name": "",
        "task": "Возьмите массив и удалите из него каждый второй элемент. Всегда сохраняйте первый элемент и начинайте удаление со следующего элемента. [keep, Remove, keep, Remove]"
    },
    {
        "id": 33,
        "name": "count by x",
        "task": "Создайте функцию с двумя аргументами, которая будет возвращать массив первых n кратных x. Предположим, что и данное число, и количество раз, которое нужно посчитать, будут положительными числами, большими 0."
    },
    {
        "id": 32,
        "name": "Counting sheep...",
        "task": "Рассмотрим массив/список овец, где некоторые овцы могут отсутствовать на своем месте. Нам нужна функция, которая подсчитывает количество овец, присутствующих в массиве (true означает наличие)."
    },
    {
        "id": 31,
        "name": "Super Duper Easy",
        "task": "Создайте функцию, которая возвращает значение, умноженное на 50 и увеличенное на 6. Если введенное значение является строкой, оно должно возвращать «Ошибка»."
    },
    {
        "id": 30,
        "name": "Beginner - Reduce but Grow",
        "task": "Учитывая непустой массив целых чисел, вернуть результат умножения значений вместе по порядку. Пример:import math  [1, 2, 3, 4] => 1 * 2 * 3 * 4 = 24"
    },
    {
        "id": 29,
        "name": "Volume of a Cuboid.",
        "task": "Бобу нужен быстрый способ вычисления объема прямоугольного параллелепипеда с тремя значениями: длина, ширина и высота прямоугольного параллелепипеда. Напишите функцию, которая поможет Бобу в этом вычислении."
    },
    {
        "id": 28,
        "name": "Powers of 2",
        "task": "Завершите функцию, которая принимает неотрицательное целое число n в качестве входных данных и возвращает список всех степеней числа 2 с показателем степени от 0 до n (включительно)."
    },
    {
        "id": 27,
        "name": "Beginner Series #2 Clock.",
        "task": "Часы показывают ч часов, m минут и s секунд после полуночи. Ваша задача — написать функцию, которая возвращает время с полуночи в миллисекундах."
    },
    {
        "id": 26,
        "name": "Reversed Strings.",
        "task": "Завершите решение так, чтобы оно перевернуло переданную в него строку."
    },
    {
        "id": 25,
        "name": "Century From Year",
        "task": "Первое столетие охватывает период с 1 года по 100 год включительно, второе столетие — с 101 года по 200 год включительно и т. д."
    },
    {
        "id": 24,
        "name": "String repeat",
        "task": "Напишите функцию, которая принимает целое число n и строку s в качестве параметров и возвращает строку s, повторяющуюся ровно n раз объект 'int' не является итерируемы (I)     -> (IIIIII (ello) -> (HelloHelloHelloHelloHello)"
    },
    {
        "id": 23,
        "name": "Quadratic Coefficients Solver.",
        "task": "В этом Ката вы должны найти коэффициенты квадратного уравнения данных двух корней (x1 и x2).Уравнение будет иметь вид ax^2 + bx + c = 0"
    },
    {
        "id": 22,
        "name": "Is the string uppercase?",
        "task": "Create a method to see whether the string is ALL CAPS."
    },
    {
        "id": 21,
        "name": "Abbreviate a Two Word Name.",
        "task": "Напишите функцию для преобразования имени в инициалы. Это ката строго состоит из двух слов с одним пробелом между ними На выходе должны быть две заглавные буквы с точкой, разделяющей их Патрик Фини => P.F."
    },
    {
        "id": 20,
        "name": "Opposites Attract.",
        "task": "Напишите функцию, которая будет принимать количество лепестков каждого цветка и возвращать true, если они влюблены, и false, если нет."
    },
    {
        "id": 19,
        "name": "Is it a palindrome?",
        "task": "Палиндром — это слово, число, фраза или другая последовательность символов, которая читается так же, как и вперед, и назад, например, мадам или гоночная машина, дата и время 21/12/33 12:21"
    },
    {
        "id": 18,
        "name": "Sum of positive",
        "task": "Вы получаете массив чисел, возвращаете сумму всех положительных. Пример [1,-4,7,12] => 1 + 7 + 12 = 20"
    },
    {
        "id": 17,
        "name": "Convert number to reversed array of digits",
        "task": "Учитывая случайное неотрицательное число, вы должны вернуть цифры этого числа в массиве в обратном порядке."
    },
    {
        "id": 16,
        "name": "",
        "task": "Очень просто, по заданному целому числу или числу с плавающей запятой найти его противоположность."
    },
    {
        "id": 15,
        "name": "Grasshopper - Check for factor",
        "task": "Возвратите true, если это фактор или false, если это не так. Факторы — это числа, которые вы можете перемножить, чтобы получить другое число. 2 и 3 являются делителями 6, потому что: 2 * 3 = 6"
    },
    {
        "id": 14,
        "name": "Returning Strings",
        "task": "Создайте функцию, которая будет возвращать оператор приветствия, использующий ввод; ваша программа должна вернуть (Привет, <имя>, как дела сегодня?)."
    },
    {
        "id": 13,
        "name": "Wilson primes.",
        "task": "Ваша задача — создать функцию, возвращающую истину, если заданное число является простым числом Вильсона."
    },
    {
        "id": 12,
        "name": "DNA to RNA Conversion.",
        "task": "(GCAT => GCAU) Входная строка может быть произвольной длины, в частности, она может быть пустой. Все входные данные гарантированно верны, т. е. каждая входная строка будет состоять только из букв «G», «C», «A» и/или «T»."
    },
    {
        "id": 11,
        "name": "Expressions Matter.",
        "task": "Даны три целых числа a ,b ,c, вернуть наибольшее число, полученное после вставки следующих операторов и скобок: +, *, () Другими словами, попробуйте каждую комбинацию a,b,c с [*+()] и верните максимальное полученное значение (подробнее об этом читайте в примечаниях) 1 * (2 + 3) = 5 1 * 2 * 3 = 6 1 + 2 * 3 = 7 (1 + 2) * 3 = 9"
    },
    {
        "id": 10,
        "name": "Twice as old.",
        "task": "Подсчитайте, сколько лет назад отец был вдвое старше сына (или через сколько лет он будет вдвое старше).Ответ всегда больше или равен 0, независимо от того, был он в прошлом или в будущем."
    },
    {
        "id": 9,
        "name": "Return Negative.",
        "task": "В этом простом задании вам дается число, и вы должны сделать его отрицательным. Число может быть уже отрицательным, и в этом случае никаких изменений не требуется."
    },
    {
        "id": 8,
        "name": "Find Multiples of a Number",
        "task": "Если предел кратен целому числу, он также должен быть включен. В функцию всегда будут передаваться только положительные целые числа, не состоящие из 0. Предел всегда будет выше основания. Например, если переданы параметры (2, 6), функция должна вернуть [2, 4, 6], так как 2, 4 и 6 кратны от 2 до 6."
    },
    {
        "id": 7,
        "name": "Take the Derivative",
        "task": "Ваша функция должна умножать два числа, а затем вычитать 1 из показателя степени. Затем он должен вернуть выражение (например, 28x^7). «^1» не следует усекать, если показатель степени = 2."
    },
    {
        "id": 5,
        "name": "Thinkful - Logic Drills: Traffic light",
        "task": "Вам нужна функция для обработки каждого перехода от зеленого к желтому, к красному, а затем снова к зеленому.зеленый, выход должен быть желтым."
    },
    {
        "id": 4,
        "name": "Keep Hydrated!",
        "task": "Поскольку Натан знает, как важно избегать обезвоживания, он выпивает 0,5 литра воды за час езды на велосипеде."
    },
    {
        "id": 3,
        "name": "Total amount of points",
        "task": "if x > y: 3 points (win) if x < y: 0 points (loss) if x = y: 1 point (tie)  Нам нужно написать функцию, которая берет эту коллекцию и возвращает количество очков, набранных нашей командой (x) в чемпионате по приведенным выше правилам."
    },
    {
        "id": 2,
        "name": "Did she say hallo?",
        "task": "Напишите простую функцию, проверяющую, содержит ли строка слово «привет» на разных языках."
    },
    {
        "id": 1,
        "name": "Name Shuffler",
        "task": "Напишите функцию, которая возвращает строку, в которой имя заменено на фамилию."
    }
]