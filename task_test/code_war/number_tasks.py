import json
number_t_dict = {
    "34.": "Возьмите массив и удалите из него каждый второй элемент. Всегда сохраняйте первый элемент и начинайте удаление со следующего элемента. [keep, Remove, keep, Remove]",
    "33. count by x": "Создайте функцию с двумя аргументами, которая будет возвращать массив первых n кратных x. Предположим, что и данное число, и количество раз, которое нужно посчитать, будут положительными числами, большими 0.",
    "32. Counting sheep...": "Рассмотрим массив/список овец, где некоторые овцы могут отсутствовать на своем месте. Нам нужна функция, которая подсчитывает количество овец, присутствующих в массиве (true означает наличие).",
    "31. Super Duper Easy": "Создайте функцию, которая возвращает значение, умноженное на 50 и увеличенное на 6. Если введенное значение является строкой, оно должно возвращать «Ошибка».",
    "30. Beginner - Reduce but Grow": "Учитывая непустой массив целых чисел, вернуть результат умножения значений вместе по порядку. Пример:import math  [1, 2, 3, 4] => 1 * 2 * 3 * 4 = 24",
    "29. Volume of a Cuboid.": "Бобу нужен быстрый способ вычисления объема прямоугольного параллелепипеда с тремя значениями: длина, ширина и высота прямоугольного параллелепипеда. Напишите функцию, которая поможет Бобу в этом вычислении.",
    "28. Powers of 2": "Завершите функцию, которая принимает неотрицательное целое число n в качестве входных данных и возвращает список всех степеней числа 2 с показателем степени от 0 до n (включительно).",
    "27. Beginner Series #2 Clock.": "Часы показывают ч часов, m минут и s секунд после полуночи. Ваша задача — написать функцию, которая возвращает время с полуночи в миллисекундах.",
    "26. Reversed Strings.": "Завершите решение так, чтобы оно перевернуло переданную в него строку.",
    "25. Century From Year": "Первое столетие охватывает период с 1 года по 100 год включительно, второе столетие — с 101 года по 200 год включительно и т. д.",
    "24. String repeat": "Напишите функцию, которая принимает целое число n и строку s в качестве параметров и возвращает строку s, повторяющуюся ровно n раз объект 'int' не является итерируемы (I)     -> (IIIIII (ello) -> (HelloHelloHelloHelloHello)",
    "23. Quadratic Coefficients Solver.": "В этом Ката вы должны найти коэффициенты квадратного уравнения данных двух корней (x1 и x2).Уравнение будет иметь вид ax^2 + bx + c = 0",
    "22. Is the string uppercase?": "Create a method to see whether the string is ALL CAPS.",
    "21. Abbreviate a Two Word Name.": " Напишите функцию для преобразования имени в инициалы. Это ката строго состоит из двух слов с одним пробелом между ними На выходе должны быть две заглавные буквы с точкой, разделяющей их Патрик Фини => P.F.",
    "20. Opposites Attract.": "Напишите функцию, которая будет принимать количество лепестков каждого цветка и возвращать true, если они влюблены, и false, если нет.",
    "19. Is it a palindrome?": "Палиндром — это слово, число, фраза или другая последовательность символов, которая читается так же, как и вперед, и назад, например, мадам или гоночная машина, дата и время 21/12/33 12:21",
    "18. Sum of positive": "Вы получаете массив чисел, возвращаете сумму всех положительных. Пример [1,-4,7,12] => 1 + 7 + 12 = 20",
    "17. Convert number to reversed array of digits": "Учитывая случайное неотрицательное число, вы должны вернуть цифры этого числа в массиве в обратном порядке.",
    "16": "Очень просто, по заданному целому числу или числу с плавающей запятой найти его противоположность.",
    "15. Grasshopper - Check for factor": "Возвратите true, если это фактор или false, если это не так. Факторы — это числа, которые вы можете перемножить, чтобы получить другое число. 2 и 3 являются делителями 6, потому что: 2 * 3 = 6",
    "14. Returning Strings": "Создайте функцию, которая будет возвращать оператор приветствия, использующий ввод; ваша программа должна вернуть (Привет, <имя>, как дела сегодня?).",
    "13 Wilson primes.": "Ваша задача — создать функцию, возвращающую истину, если заданное число является простым числом Вильсона.",
    "12. DNA to RNA Conversion.": "(GCAT => GCAU) Входная строка может быть произвольной длины, в частности, она может быть пустой. Все входные данные гарантированно верны, т. е. каждая входная строка будет состоять только из букв «G», «C», «A» и/или «T».",
    "11. Expressions Matter.": "Даны три целых числа a ,b ,c, вернуть наибольшее число, полученное после вставки следующих операторов и скобок: +, *, () Другими словами, попробуйте каждую комбинацию a,b,c с [*+()] и верните максимальное полученное значение (подробнее об этом читайте в примечаниях) 1 * (2 + 3) = 5 1 * 2 * 3 = 6 1 + 2 * 3 = 7 (1 + 2) * 3 = 9",
    "10. Twice as old.": "Подсчитайте, сколько лет назад отец был вдвое старше сына (или через сколько лет он будет вдвое старше).Ответ всегда больше или равен 0, независимо от того, был он в прошлом или в будущем.",
    "9. Return Negative.": "В этом простом задании вам дается число, и вы должны сделать его отрицательным. Число может быть уже отрицательным, и в этом случае никаких изменений не требуется.",
    "8. Find Multiples of a Number": "Если предел кратен целому числу, он также должен быть включен. В функцию всегда будут передаваться только положительные целые числа, не состоящие из 0. Предел всегда будет выше основания. Например, если переданы параметры (2, 6), функция должна вернуть [2, 4, 6], так как 2, 4 и 6 кратны от 2 до 6.",
    "7. Take the Derivative": "Ваша функция должна умножать два числа, а затем вычитать 1 из показателя степени. Затем он должен вернуть выражение (например, 28x^7). «^1» не следует усекать, если показатель степени = 2.",
    "5. Thinkful - Logic Drills: Traffic light": "Вам нужна функция для обработки каждого перехода от зеленого к желтому, к красному, а затем снова к зеленому.зеленый, выход должен быть желтым.",
    "4. Keep Hydrated!": " Поскольку Натан знает, как важно избегать обезвоживания, он выпивает 0,5 литра воды за час езды на велосипеде.",
    "3. Total amount of points": "if x > y: 3 points (win) if x < y: 0 points (loss) if x = y: 1 point (tie)  Нам нужно написать функцию, которая берет эту коллекцию и возвращает количество очков, набранных нашей командой (x) в чемпионате по приведенным выше правилам.",
    "2. Did she say hallo?": "Напишите простую функцию, проверяющую, содержит ли строка слово «привет» на разных языках.",
    "1. Name Shuffler": "Напишите функцию, которая возвращает строку, в которой имя заменено на фамилию.",
}

task_dict_list = []
for key, value in number_t_dict.items():
    # отделяем номер и название
    parts = key.split(maxsplit=1)
    task_id = int(parts[0].replace(".", ""))  # убираем точку
    task_name = parts[1] if len(parts) > 1 else ""
    
    task_dict_list.append({
        "id": task_id,
        "name": task_name.strip(),
        "task": value.strip(),
    })
with open("task_code_war.json", "w", encoding="utf-8") as file:
    # js_r = json.loads(file)
    json.dump(task_dict_list,file, ensure_ascii=False, indent=4)
# Пример вывода первых 3 элементов
print(task_dict_list[0])
